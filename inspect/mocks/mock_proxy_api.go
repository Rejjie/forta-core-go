// Code generated by MockGen. DO NOT EDIT.
// Source: inspect/proxy_api.go

// Package mock_inspect is a generated GoMock package.
package mock_inspect

import (
	context "context"
	big "math/big"
	reflect "reflect"

	types "github.com/ethereum/go-ethereum/core/types"
	gomock "github.com/golang/mock/gomock"
)

// MockProxyAPIClient is a mock of ProxyAPIClient interface.
type MockProxyAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockProxyAPIClientMockRecorder
}

// MockProxyAPIClientMockRecorder is the mock recorder for MockProxyAPIClient.
type MockProxyAPIClientMockRecorder struct {
	mock *MockProxyAPIClient
}

// NewMockProxyAPIClient creates a new mock instance.
func NewMockProxyAPIClient(ctrl *gomock.Controller) *MockProxyAPIClient {
	mock := &MockProxyAPIClient{ctrl: ctrl}
	mock.recorder = &MockProxyAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProxyAPIClient) EXPECT() *MockProxyAPIClientMockRecorder {
	return m.recorder
}

// BlockByNumber mocks base method.
func (m *MockProxyAPIClient) BlockByNumber(ctx context.Context, int2 *big.Int) (*types.Block, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BlockByNumber", ctx, int2)
	ret0, _ := ret[0].(*types.Block)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BlockByNumber indicates an expected call of BlockByNumber.
func (mr *MockProxyAPIClientMockRecorder) BlockByNumber(ctx, int2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BlockByNumber", reflect.TypeOf((*MockProxyAPIClient)(nil).BlockByNumber), ctx, int2)
}

// BlockNumber mocks base method.
func (m *MockProxyAPIClient) BlockNumber(ctx context.Context) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BlockNumber", ctx)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BlockNumber indicates an expected call of BlockNumber.
func (mr *MockProxyAPIClientMockRecorder) BlockNumber(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BlockNumber", reflect.TypeOf((*MockProxyAPIClient)(nil).BlockNumber), ctx)
}
